/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Macros
#define C_HM_L(k1, k2, k3, k4) &c_hm LGUI k1  &c_hm LALT k2  &c_hm LCTRL k3  &c_hm LSHIFT k4
#define C_HM_R(k1, k2, k3, k4) &c_hm RSHIFT k1  &c_hm RCTRL k2  &c_hm RALT k3  &c_hm RGUI k4
#define C_LT(l1, k1) &c_lt l1 k1

// Layers
#define COLEMAK_DH 0
#define NUMS 1
#define NAV 2
#define FN 3

/ {
    // docs: https://zmk.dev/docs/behaviors/hold-tap
    behaviors {
        c_hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        c_lt: layers_tabs {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
            &none      &kp Q      &kp W      &kp F      &kp P      &kp B          &kp J      &kp L      &kp U      &kp Y      &kp SEM    &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            &none      C_HM_L(A,  R,         S,         T)         &kp G          &kp M      C_HM_R(N,  E,         I,         O,         &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            &none      &kp Z      &kp X      &kp C      &kp D      &kp V          &kp K      &kp H      &kp COMMA  &kp DOT    &kp SLAS   &none
        //╰──────────┴──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────┴──────────╯
                                             &none      C_LT(NUMS, TAB) &kp SPACE &kp BSPC   C_LT(NAV, ENTER) &none
        //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };

        nums_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
            &none      &kp 8      &kp 7      &kp 3      &kp 0      &kp 5          &kp 6      &kp 2      &kp 1      &kp 9      &kp 4      &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            &none      C_HM_L(DLLR, &none,   LPAR,      RPAR)      &kp AT         &kp BSLH   C_HM_R(MINUS, EQUAL,  &none,     ASTRK)     &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            &none      &kp EXCL   &kp HASH   &none      &kp SQT    &kp GRAVE      &kp AMPS   &kp LBKT   &kp RBKT   &kp PRCNT  &kp CARET  &none
        //╰──────────┴──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────┴──────────╯
                                             &none      &trans     &none          &kp DEL    C_LT(NAV, ESC) &none
        //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };

        nav_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
            &none      &kp F1     &kp F2     &kp F3     &kp F4     &kp F5         &kp F6     &kp F7     &kp F8     &kp F9     &kp F10    &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            &none      C_HM_L(F11, HOME,     PG_UP,     PG_DN)     &kp END        &kp LEFT   C_HM_R(DOWN, UP,      RIGHT,     F12)       &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            &none      &none      &none      &none      &none      &kp CAPS       &kp PSCRN  &none      &none      &none      &none      &none
        //╰──────────┴──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────┴──────────╯
                                             &none      &mo NUMS   &mo FN         &none      &trans     &none
        //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };

        fn_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
            &none      &kp C_BRI_DN &kp C_BRI_UP &none  &none      &none          &none      &kp C_PREV &kp C_PP   &kp C_NEXT &kp C_MUTE &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            &none      &kp C_VOL_DN &none    &none      &none      &none          &none      &none      &none      &none      &kp C_VOL_UP &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
            &none      &none      &none      &none      &none      &none          &none      &none      &none      &none      &none      &none
        //╰──────────┴──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────┴──────────╯
                                             &none      &trans     &none          &none      &none      &none
        //                                 ╰──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────╯
            >;
        };
    };
};

// vim: ft=c 
